{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n;\nexport let SearchComponent = class SearchComponent {\n  constructor(apiService, toastr) {\n    this.apiService = apiService;\n    this.toastr = toastr;\n    this.githubUsername = '';\n    this.showProfile = false;\n    this.loading = false;\n  }\n  /**\n   * @description Call Github API for getting github user data\n   */\n  searchGithubUsers() {\n    // Toastr for showcasing warnings\n    if (this.githubUsername === '') {\n      this.toastr.warning('Please enter a username!', 'Warning');\n    } else {\n      this.loading = true;\n      this.apiService.getUser(this.githubUsername)?.subscribe(res => {\n        this.profileData = res;\n        setTimeout(() => {\n          this.loading = false;\n          this.showProfile = true;\n        }, 1000);\n      }, error => {\n        this.loading = false;\n        this.toastr.error('Unable to fetch user from Github!', 'Error Message');\n      });\n    }\n  }\n};\nSearchComponent = __decorate([Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html'\n})], SearchComponent);","map":{"version":3,"names":["Component","SearchComponent","constructor","apiService","toastr","githubUsername","showProfile","loading","searchGithubUsers","warning","getUser","subscribe","res","profileData","setTimeout","error","__decorate","selector","templateUrl"],"sources":["D:\\Documents Volume D\\Intern Ass\\fyleChallenge-main\\fyle-internship-challenge-23-master\\src\\app\\components\\search\\search.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { ToastrService } from 'ngx-toastr';\n\nexport interface ProfileData {\n  avatar_url: string;\n  name: string;\n  bio: string;\n  location: string;\n  twitter_username: string;\n  html_url: string;\n};\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n})\nexport class SearchComponent {\n  constructor(private apiService: ApiService, private toastr: ToastrService) {}\n\n  githubUsername = '';\n  public profileData: ProfileData; // Profile Data from API\n  public showProfile: boolean = false;\n  public loading: boolean = false;\n\n  /**\n   * @description Call Github API for getting github user data\n   */\n  searchGithubUsers() {\n    // Toastr for showcasing warnings\n    if (this.githubUsername === '') {\n      this.toastr.warning('Please enter a username!', 'Warning');\n    } else {\n      this.loading = true;\n      this.apiService.getUser(this.githubUsername)?.subscribe(\n        (res: ProfileData) => {\n          this.profileData = res;\n          setTimeout(() => {\n            this.loading = false;\n            this.showProfile = true;\n          }, 1000);\n        },\n        (error) => {\n          this.loading = false;\n          this.toastr.error(\n            'Unable to fetch user from Github!',\n            'Error Message'\n          );\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWxC;AAMM,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YAAoBC,UAAsB,EAAUC,MAAqB;IAArD,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAE1D,KAAAC,cAAc,GAAG,EAAE;IAEZ,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,OAAO,GAAY,KAAK;EAL6C;EAO5E;;;EAGAC,iBAAiBA,CAAA;IACf;IACA,IAAI,IAAI,CAACH,cAAc,KAAK,EAAE,EAAE;MAC9B,IAAI,CAACD,MAAM,CAACK,OAAO,CAAC,0BAA0B,EAAE,SAAS,CAAC;KAC3D,MAAM;MACL,IAAI,CAACF,OAAO,GAAG,IAAI;MACnB,IAAI,CAACJ,UAAU,CAACO,OAAO,CAAC,IAAI,CAACL,cAAc,CAAC,EAAEM,SAAS,CACpDC,GAAgB,IAAI;QACnB,IAAI,CAACC,WAAW,GAAGD,GAAG;QACtBE,UAAU,CAAC,MAAK;UACd,IAAI,CAACP,OAAO,GAAG,KAAK;UACpB,IAAI,CAACD,WAAW,GAAG,IAAI;QACzB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,EACAS,KAAK,IAAI;QACR,IAAI,CAACR,OAAO,GAAG,KAAK;QACpB,IAAI,CAACH,MAAM,CAACW,KAAK,CACf,mCAAmC,EACnC,eAAe,CAChB;MACH,CAAC,CACF;;EAEL;CACD;AAnCYd,eAAe,GAAAe,UAAA,EAJ3BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE;CACd,CAAC,C,EACWjB,eAAe,CAmC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}